# Generated by Django 3.0 on 2022-05-06 11:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('WebAPI', '0005_auto_20220429_1611'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_id', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, default='')),
                ('image_url', models.CharField(max_length=100)),
                ('image_preview_url', models.CharField(blank=True, max_length=100)),
                ('image_thumbnail_url', models.CharField(blank=True, max_length=100)),
                ('permalink', models.CharField(max_length=100)),
                ('external_link', models.CharField(blank=True, max_length=100)),
                ('asset_contract_id', models.CharField(max_length=100)),
                ('last_sale', models.CharField(blank=True, max_length=100)),
                ('top_bid', models.CharField(blank=True, max_length=100)),
                ('listing_date', models.CharField(blank=True, max_length=100)),
                ('is_presale', models.CharField(blank=True, max_length=100)),
                ('transfer_fee_payment_token', models.CharField(blank=True, max_length=100)),
                ('transfer_fee', models.CharField(blank=True, max_length=100)),
                ('sell_orders', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Asset',
            },
        ),
        migrations.CreateModel(
            name='AssetsCollection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_image_url', models.CharField(max_length=100)),
                ('chat_url', models.CharField(blank=True, max_length=100)),
                ('created_date', models.CharField(max_length=100)),
                ('default_to_fiat', models.BooleanField()),
                ('description', models.TextField(blank=True, default='')),
                ('dev_buyer_fee_basis_points', models.CharField(blank=True, max_length=100)),
                ('dev_seller_fee_basis_points', models.CharField(blank=True, max_length=100)),
                ('discord_url', models.CharField(blank=True, max_length=100)),
                ('card_display_style', models.CharField(blank=True, max_length=100)),
                ('external_url', models.CharField(blank=True, max_length=100)),
                ('featured', models.BooleanField()),
                ('featured_image_url', models.CharField(blank=True, max_length=100)),
                ('hidden', models.BooleanField()),
                ('safelist_request_status', models.CharField(blank=True, max_length=100)),
                ('image_url', models.CharField(blank=True, max_length=100)),
                ('is_subject_to_whitelist', models.CharField(blank=True, max_length=100)),
                ('large_image_url', models.CharField(blank=True, max_length=100)),
                ('medium_username', models.CharField(blank=True, max_length=100)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('only_proxied_transfers', models.BooleanField()),
                ('opensea_buyer_fee_basis_points', models.CharField(blank=True, max_length=100)),
                ('opensea_seller_fee_basis_points', models.CharField(blank=True, max_length=100)),
                ('payout_address', models.CharField(blank=True, max_length=100)),
                ('require_email', models.BooleanField()),
                ('short_description', models.TextField(blank=True, default='')),
                ('slug', models.CharField(blank=True, max_length=100)),
                ('telegram_url', models.CharField(blank=True, max_length=100)),
                ('twitter_username', models.CharField(blank=True, max_length=100)),
                ('instagram_username', models.CharField(blank=True, max_length=100)),
                ('wiki_url', models.CharField(blank=True, max_length=100)),
                ('is_nsfw', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Assets Collection',
            },
        ),
        migrations.CreateModel(
            name='AssetsUsers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(max_length=254)),
                ('username', models.CharField(max_length=254)),
                ('profile_img_url', models.CharField(max_length=254)),
                ('address', models.CharField(max_length=254)),
                ('config', models.CharField(blank=True, max_length=254)),
            ],
            options={
                'verbose_name': 'Assets User',
            },
        ),
        migrations.RemoveField(
            model_name='digitialassets',
            name='category',
        ),
        migrations.RemoveField(
            model_name='digitialassets',
            name='imageMedia',
        ),
        migrations.DeleteModel(
            name='Categories',
        ),
        migrations.DeleteModel(
            name='DigitialAssets',
        ),
        migrations.DeleteModel(
            name='PhotoMedia',
        ),
        migrations.AddField(
            model_name='assets',
            name='collection_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection_id', to='WebAPI.AssetsCollection'),
        ),
        migrations.AddField(
            model_name='assets',
            name='creator_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator', to='WebAPI.AssetsUsers'),
        ),
        migrations.AddField(
            model_name='assets',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to='WebAPI.AssetsUsers'),
        ),
    ]
